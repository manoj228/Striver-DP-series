problem link: https://practice.geeksforgeeks.org/problems/minimum-number-of-deletions-and-insertions0209/1

Minimum Insertions/Deletions to Convert String = number of insertions + number of deletions

number of insertions = n - lcs(str1, str2)
number of deletions = m - lcs(str1, str2)

C++ Solution: 

TC: O(M*N)
SC: O(N)

class Solution{
		
    private:
    int lcs(string &text1, string &text2)
    {
        int m = text1.size(), n = text2.size();
        
        vector<int> prev(n+1, 0), cur(n+1, 0);
        
        for(int i = 1; i <= m; i++)
        {
            for(int j = 1; j <= n; j++)
            {
                if(text1[i-1] == text2[j-1])
                    cur[j] = 1 + prev[j-1];
                
                else
                    cur[j] = max(prev[j], cur[j-1]);
            }
            
            prev = cur;
        }
        
        return prev[n];
    }

	public:
	int minOperations(string str1, string str2) 
	{ 
	    int n = str1.size(), m = str2.size();
	    
	    int k = lcs(str1, str2);
	    
	    
	    return (n-k) + (m-k); 
	} 
};

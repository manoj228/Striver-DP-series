C++ solution:

#include<bits/stdc++.h>
using namespace std;

int f(int ind, int k, int arr[], vector<int> &dp)
{
	if(ind == 0) return 0;
	
	if(dp[ind] != -1) return dp[ind];
	
	int mini = INT_MAX;
	for(int i = 1; i <= k; i++)
	{
		if(ind - i >= 0)
		{
			int energy = abs(arr[ind] - arr[ind - i]) + f(ind - i, k, arr, dp);
		
			mini = min(mini, energy);

		}
	}
	
	return dp[ind] =  mini;
}

void solve()
{
	int n, k;
	cin >> n >> k;
	
	int arr[n];
	for(int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}	
	
	vector<int> dp(n, -1);
	
	cout << f(n-1, k, arr, dp);
}

int main(){
	
	int testCases = 1;
//	cin >> testCases;
	
	while(testCases--)
	{
		solve();
		cout << endl;
	}
	
	return 0;
}
